@property( colibri_gui && colibri_text )

@piece( custom_ps_uniformDeclaration )
	@property( syntax == glsl || syntax == glslvk )
		vulkan_layout( ogre_T2 ) uniform samplerBuffer glyphAtlas;
	@end
	@property( syntax == hlsl )
		Buffer<unorm float> glyphAtlas : register(t2);
	@end
	@property( syntax == metal )
		, device const uchar *glyphAtlas [[buffer(TEX_SLOT_START+2)]]
	@end
@end

@piece( custom_ps_preLights )
	@property( syntax == metal )
		uchar glyphCol;
	@else
		float glyphCol;
	@end
	@property( syntax != glsl && syntax != glslvk )
		#define outColour outPs.colour0
	@end

	glyphCol = bufferFetch1( glyphAtlas, int( inPs.glyphOffsetStart +
											  uint(floor(inPs.uvText.y) * float(inPs.pixelsPerRow) +
												   floor(inPs.uvText.x)) ) );
	@property( syntax == metal )
		diffuseCol.w = unpack_unorm4x8_to_float( glyphCol ).x;
	@else
		diffuseCol.w = glyphCol;
	@end
@end

@end
